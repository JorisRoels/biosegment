{
  "openapi": "3.0.2",
  "info": { "title": "BioSegment", "version": "0.1.0" },
  "paths": {
    "/api/v1/login/access-token": {
      "post": {
        "tags": ["login"],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login_access_token_api_v1_login_access_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_access_token_api_v1_login_access_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": ["login"],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "test_token_api_v1_login_test_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": ["login"],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "recover_password_api_v1_password_recovery__email__post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Email", "type": "string" },
            "name": "email",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Msg" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": ["login"],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "reset_password_api_v1_reset_password__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_password_api_v1_reset_password__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Msg" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": ["users"],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "read_users_api_v1_users__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Users Api V1 Users  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["users"],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "create_user_api_v1_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "read_user_me_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["users"],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "update_user_me_api_v1_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_user_me_api_v1_users_me_put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/open": {
      "post": {
        "tags": ["users"],
        "summary": "Create User Open",
        "description": "Create new user without the need to be logged in.",
        "operationId": "create_user_open_api_v1_users_open_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_user_open_api_v1_users_open_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "read_user_by_id_api_v1_users__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "User Id", "type": "integer" },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["users"],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "update_user_api_v1_users__user_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "User Id", "type": "integer" },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/utils/train/": {
      "post": {
        "tags": ["utils"],
        "summary": "Train Unet2D",
        "description": "Train UNet2D model.",
        "operationId": "train_unet2d_api_v1_utils_train__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelCreateFromAnnotation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/utils/infer/": {
      "post": {
        "tags": ["utils"],
        "summary": "Infer Unet2D",
        "description": "Segment using UNet2D model.",
        "operationId": "infer_unet2d_api_v1_utils_infer__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentationCreateFromModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/utils/test-pytorch/": {
      "post": {
        "tags": ["utils"],
        "summary": "Test Pytorch",
        "description": "Test Celery worker and Pytorch.",
        "operationId": "test_pytorch_api_v1_utils_test_pytorch__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Msg" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/utils/test-celery/": {
      "post": {
        "tags": ["utils"],
        "summary": "Test Celery",
        "description": "Test Celery worker.",
        "operationId": "test_celery_api_v1_utils_test_celery__post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Timeout", "type": "integer" },
            "name": "timeout",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/utils/poll-task/": {
      "post": {
        "tags": ["utils"],
        "summary": "Poll Task",
        "description": "Poll Celery task.",
        "operationId": "poll_task_api_v1_utils_poll_task__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Task" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskState" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/utils/test-email/": {
      "post": {
        "tags": ["utils"],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "test_email_api_v1_utils_test_email__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Email To",
              "type": "string",
              "format": "email"
            },
            "name": "email_to",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Msg" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/items/": {
      "get": {
        "tags": ["items"],
        "summary": "Read Items",
        "description": "Retrieve items.",
        "operationId": "read_items_api_v1_items__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Items Api V1 Items  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Item" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["items"],
        "summary": "Create Item",
        "description": "Create new item.",
        "operationId": "create_item_api_v1_items__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ItemCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Item" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/items/{id}": {
      "get": {
        "tags": ["items"],
        "summary": "Read Item",
        "description": "Get item by ID.",
        "operationId": "read_item_api_v1_items__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Item" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["items"],
        "summary": "Update Item",
        "description": "Update an item.",
        "operationId": "update_item_api_v1_items__id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ItemUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Item" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["items"],
        "summary": "Delete Item",
        "description": "Delete an item.",
        "operationId": "delete_item_api_v1_items__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Item" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/segmentations/": {
      "get": {
        "tags": ["segmentations"],
        "summary": "Read Segmentations",
        "description": "Retrieve segmentations.",
        "operationId": "read_segmentations_api_v1_segmentations__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Segmentations Api V1 Segmentations  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Segmentation" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["segmentations"],
        "summary": "Create Segmentation",
        "description": "Create new segmentation, possibly from a model.",
        "operationId": "create_segmentation_api_v1_segmentations__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SegmentationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Segmentation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/segmentations/{id}": {
      "get": {
        "tags": ["segmentations"],
        "summary": "Read Segmentation",
        "description": "Get segmentation by ID.",
        "operationId": "read_segmentation_api_v1_segmentations__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Segmentation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["segmentations"],
        "summary": "Update Segmentation",
        "description": "Update an segmentation.",
        "operationId": "update_segmentation_api_v1_segmentations__id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SegmentationUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Segmentation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["segmentations"],
        "summary": "Delete Segmentation",
        "description": "Delete an segmentation.",
        "operationId": "delete_segmentation_api_v1_segmentations__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Segmentation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/models/": {
      "get": {
        "tags": ["models"],
        "summary": "Read Models",
        "description": "Retrieve models.",
        "operationId": "read_models_api_v1_models__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Models Api V1 Models  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Model" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["models"],
        "summary": "Create Model",
        "description": "Create new model.",
        "operationId": "create_model_api_v1_models__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ModelCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/models/{id}": {
      "get": {
        "tags": ["models"],
        "summary": "Read Model",
        "description": "Get model by ID.",
        "operationId": "read_model_api_v1_models__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["models"],
        "summary": "Update Model",
        "description": "Update an model.",
        "operationId": "update_model_api_v1_models__id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ModelUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["models"],
        "summary": "Delete Model",
        "description": "Delete an model.",
        "operationId": "delete_model_api_v1_models__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/projects/": {
      "get": {
        "tags": ["projects"],
        "summary": "Read Projects",
        "description": "Retrieve projects.",
        "operationId": "read_projects_api_v1_projects__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Projects Api V1 Projects  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Project" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["projects"],
        "summary": "Create Project",
        "description": "Create new project.",
        "operationId": "create_project_api_v1_projects__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "tags": ["projects"],
        "summary": "Read Project",
        "description": "Get project by ID.",
        "operationId": "read_project_api_v1_projects__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["projects"],
        "summary": "Update Project",
        "description": "Update an project.",
        "operationId": "update_project_api_v1_projects__id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete Project",
        "description": "Delete an project.",
        "operationId": "delete_project_api_v1_projects__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/projects/{id}/datasets": {
      "get": {
        "tags": ["projects"],
        "summary": "Read Datasets",
        "description": "Retrieve datasets for project.",
        "operationId": "read_datasets_api_v1_projects__id__datasets_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Datasets Api V1 Projects  Id  Datasets Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Dataset" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["projects"],
        "summary": "Create Dataset",
        "description": "Create new dataset for project.",
        "operationId": "create_dataset_api_v1_projects__id__datasets_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatasetCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Dataset" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/projects/{id}/models": {
      "get": {
        "tags": ["projects"],
        "summary": "Read Models",
        "description": "Retrieve models for project.",
        "operationId": "read_models_api_v1_projects__id__models_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Models Api V1 Projects  Id  Models Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Model" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["projects"],
        "summary": "Create Model",
        "description": "Create new model for project.",
        "operationId": "create_model_api_v1_projects__id__models_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ModelCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Dataset" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/datasets/": {
      "get": {
        "tags": ["datasets"],
        "summary": "Read Datasets",
        "description": "Retrieve datasets.",
        "operationId": "read_datasets_api_v1_datasets__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Datasets Api V1 Datasets  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Dataset" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["datasets"],
        "summary": "Create Dataset",
        "description": "Create new dataset.",
        "operationId": "create_dataset_api_v1_datasets__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatasetCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Dataset" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/datasets/{id}": {
      "get": {
        "tags": ["datasets"],
        "summary": "Read Dataset",
        "description": "Get dataset by ID.",
        "operationId": "read_dataset_api_v1_datasets__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Dataset" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["datasets"],
        "summary": "Update Dataset",
        "description": "Update an dataset.",
        "operationId": "update_dataset_api_v1_datasets__id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatasetUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Dataset" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["datasets"],
        "summary": "Delete Dataset",
        "description": "Delete an dataset.",
        "operationId": "delete_dataset_api_v1_datasets__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Dataset" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/datasets/{id}/annotations": {
      "get": {
        "tags": ["datasets"],
        "summary": "Read Annotations",
        "description": "Retrieve annotations.",
        "operationId": "read_annotations_api_v1_datasets__id__annotations_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Annotations Api V1 Datasets  Id  Annotations Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Annotation" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["datasets"],
        "summary": "Create Annotation",
        "description": "Create new annotation.",
        "operationId": "create_annotation_api_v1_datasets__id__annotations_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AnnotationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Annotation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/datasets/{id}/segmentations": {
      "get": {
        "tags": ["datasets"],
        "summary": "Read Segmentations",
        "description": "Retrieve segmentations.",
        "operationId": "read_segmentations_api_v1_datasets__id__segmentations_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Segmentations Api V1 Datasets  Id  Segmentations Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Segmentation" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["datasets"],
        "summary": "Create Segmentation",
        "description": "Create new segmentation.",
        "operationId": "create_segmentation_api_v1_datasets__id__segmentations_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SegmentationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Segmentation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/annotations/": {
      "get": {
        "tags": ["annotations"],
        "summary": "Read Annotations",
        "description": "Retrieve annotations.",
        "operationId": "read_annotations_api_v1_annotations__get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Annotations Api V1 Annotations  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Annotation" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["annotations"],
        "summary": "Create Annotation",
        "description": "Create new annotation.",
        "operationId": "create_annotation_api_v1_annotations__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AnnotationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Annotation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/annotations/{id}": {
      "get": {
        "tags": ["annotations"],
        "summary": "Read Annotation",
        "description": "Get annotation by ID.",
        "operationId": "read_annotation_api_v1_annotations__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Annotation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["annotations"],
        "summary": "Update Annotation",
        "description": "Update an annotation.",
        "operationId": "update_annotation_api_v1_annotations__id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AnnotationUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Annotation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["annotations"],
        "summary": "Delete Annotation",
        "description": "Delete an annotation.",
        "operationId": "delete_annotation_api_v1_annotations__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Annotation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/annotations/{id}/shapes": {
      "get": {
        "tags": ["annotations"],
        "summary": "Read Shapes",
        "description": "Get shapes from annotation by ID.",
        "operationId": "read_shapes_api_v1_annotations__id__shapes_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Shapes" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "Annotation": {
        "title": "Annotation",
        "required": ["title", "id", "owner_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "location": { "title": "Location", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/AnnotationFileType" },
          "id": { "title": "Id", "type": "integer" },
          "owner_id": { "title": "Owner Id", "type": "integer" }
        }
      },
      "AnnotationCreate": {
        "title": "AnnotationCreate",
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "location": { "title": "Location", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/AnnotationFileType" }
        }
      },
      "AnnotationFileType": {
        "title": "AnnotationFileType",
        "enum": ["json"],
        "description": "An enumeration."
      },
      "AnnotationUpdate": {
        "title": "AnnotationUpdate",
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "location": { "title": "Location", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/AnnotationFileType" },
          "shapes": {
            "title": "Shapes",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "type": "object" }
            }
          }
        }
      },
      "Body_create_user_open_api_v1_users_open_post": {
        "title": "Body_create_user_open_api_v1_users_open_post",
        "required": ["password", "email"],
        "type": "object",
        "properties": {
          "password": { "title": "Password", "type": "string" },
          "email": { "title": "Email", "type": "string", "format": "email" },
          "full_name": { "title": "Full Name", "type": "string" }
        }
      },
      "Body_login_access_token_api_v1_login_access_token_post": {
        "title": "Body_login_access_token_api_v1_login_access_token_post",
        "required": ["username", "password"],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": { "title": "Username", "type": "string" },
          "password": { "title": "Password", "type": "string" },
          "scope": { "title": "Scope", "type": "string", "default": "" },
          "client_id": { "title": "Client Id", "type": "string" },
          "client_secret": { "title": "Client Secret", "type": "string" }
        }
      },
      "Body_reset_password_api_v1_reset_password__post": {
        "title": "Body_reset_password_api_v1_reset_password__post",
        "required": ["token", "new_password"],
        "type": "object",
        "properties": {
          "token": { "title": "Token", "type": "string" },
          "new_password": { "title": "New Password", "type": "string" }
        }
      },
      "Body_update_user_me_api_v1_users_me_put": {
        "title": "Body_update_user_me_api_v1_users_me_put",
        "type": "object",
        "properties": {
          "password": { "title": "Password", "type": "string" },
          "full_name": { "title": "Full Name", "type": "string" },
          "email": { "title": "Email", "type": "string", "format": "email" }
        }
      },
      "Dataset": {
        "title": "Dataset",
        "required": ["title", "id", "owner_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/DatasetFileType" },
          "location": { "title": "Location", "type": "string" },
          "resolution": { "$ref": "#/components/schemas/Resolution" },
          "modality": { "title": "Modality", "type": "string" },
          "id": { "title": "Id", "type": "integer" },
          "owner_id": { "title": "Owner Id", "type": "integer" }
        }
      },
      "DatasetCreate": {
        "title": "DatasetCreate",
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/DatasetFileType" },
          "location": { "title": "Location", "type": "string" },
          "resolution": { "$ref": "#/components/schemas/Resolution" },
          "modality": { "title": "Modality", "type": "string" }
        }
      },
      "DatasetFileType": {
        "title": "DatasetFileType",
        "enum": ["tif2d", "tif3d", "tifseq", "pngseq"],
        "description": "An enumeration."
      },
      "DatasetUpdate": {
        "title": "DatasetUpdate",
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/DatasetFileType" },
          "location": { "title": "Location", "type": "string" },
          "resolution": { "$ref": "#/components/schemas/Resolution" },
          "modality": { "title": "Modality", "type": "string" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "Item": {
        "title": "Item",
        "required": ["title", "id", "owner_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "id": { "title": "Id", "type": "integer" },
          "owner_id": { "title": "Owner Id", "type": "integer" }
        }
      },
      "ItemCreate": {
        "title": "ItemCreate",
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" }
        }
      },
      "ItemUpdate": {
        "title": "ItemUpdate",
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" }
        }
      },
      "Model": {
        "title": "Model",
        "required": ["title", "id", "owner_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "location": { "title": "Location", "type": "string" },
          "id": { "title": "Id", "type": "integer" },
          "owner_id": { "title": "Owner Id", "type": "integer" }
        }
      },
      "ModelCreate": {
        "title": "ModelCreate",
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "location": { "title": "Location", "type": "string" }
        }
      },
      "ModelCreateFromAnnotation": {
        "title": "ModelCreateFromAnnotation",
        "required": [
          "title",
          "location",
          "annotation_id",
          "classes_of_interest"
        ],
        "type": "object",
        "properties": {
          "orientations": {
            "title": "Orientations",
            "type": "array",
            "items": { "type": "integer" },
            "default": [0]
          },
          "seed": { "title": "Seed", "type": "integer", "default": 0 },
          "device": { "title": "Device", "type": "integer", "default": 0 },
          "print_stats": {
            "title": "Print Stats",
            "type": "integer",
            "default": 50
          },
          "fm": { "title": "Fm", "type": "integer", "default": 1 },
          "levels": { "title": "Levels", "type": "integer", "default": 4 },
          "dropout": { "title": "Dropout", "type": "number", "default": 0.0 },
          "norm": { "title": "Norm", "type": "string", "default": "instance" },
          "activation": {
            "title": "Activation",
            "type": "string",
            "default": "relu"
          },
          "in_channels": {
            "title": "In Channels",
            "type": "integer",
            "default": 1
          },
          "loss": { "title": "Loss", "type": "string", "default": "ce" },
          "lr": { "title": "Lr", "type": "number", "default": 0.001 },
          "step_size": {
            "title": "Step Size",
            "type": "integer",
            "default": 10
          },
          "gamma": { "title": "Gamma", "type": "number", "default": 0.9 },
          "epochs": { "title": "Epochs", "type": "integer", "default": 50 },
          "len_epoch": {
            "title": "Len Epoch",
            "type": "integer",
            "default": 100
          },
          "test_freq": {
            "title": "Test Freq",
            "type": "integer",
            "default": 1
          },
          "train_batch_size": {
            "title": "Train Batch Size",
            "type": "integer",
            "default": 1
          },
          "test_batch_size": {
            "title": "Test Batch Size",
            "type": "integer",
            "default": 1
          },
          "title": { "title": "Title", "type": "string" },
          "location": { "title": "Location", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "from_model_id": { "title": "From Model Id", "type": "integer" },
          "annotation_id": { "title": "Annotation Id", "type": "integer" },
          "classes_of_interest": {
            "title": "Classes Of Interest",
            "type": "array",
            "items": { "type": "integer" }
          }
        }
      },
      "ModelUpdate": {
        "title": "ModelUpdate",
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "location": { "title": "Location", "type": "string" }
        }
      },
      "Msg": {
        "title": "Msg",
        "required": ["msg"],
        "type": "object",
        "properties": { "msg": { "title": "Msg", "type": "string" } }
      },
      "Project": {
        "title": "Project",
        "required": ["title", "id", "owner_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date"
          },
          "stop_date": {
            "title": "Stop Date",
            "type": "string",
            "format": "date"
          },
          "id": { "title": "Id", "type": "integer" },
          "owner_id": { "title": "Owner Id", "type": "integer" }
        }
      },
      "ProjectCreate": {
        "title": "ProjectCreate",
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date"
          },
          "stop_date": {
            "title": "Stop Date",
            "type": "string",
            "format": "date"
          }
        }
      },
      "ProjectUpdate": {
        "title": "ProjectUpdate",
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date"
          },
          "stop_date": {
            "title": "Stop Date",
            "type": "string",
            "format": "date"
          }
        }
      },
      "Resolution": {
        "title": "Resolution",
        "required": ["x", "y", "z"],
        "type": "object",
        "properties": {
          "x": { "title": "X", "type": "integer" },
          "y": { "title": "Y", "type": "integer" },
          "z": { "title": "Z", "type": "integer" }
        }
      },
      "Segmentation": {
        "title": "Segmentation",
        "required": ["title", "id", "owner_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/SegmentationFileType" },
          "location": { "title": "Location", "type": "string" },
          "id": { "title": "Id", "type": "integer" },
          "owner_id": { "title": "Owner Id", "type": "integer" }
        }
      },
      "SegmentationCreate": {
        "title": "SegmentationCreate",
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/SegmentationFileType" },
          "location": { "title": "Location", "type": "string" }
        }
      },
      "SegmentationCreateFromModel": {
        "title": "SegmentationCreateFromModel",
        "required": ["title", "location", "model_id", "dataset_id"],
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/SegmentationFileType" },
          "location": { "title": "Location", "type": "string" },
          "model_id": { "title": "Model Id", "type": "integer" },
          "dataset_id": { "title": "Dataset Id", "type": "integer" }
        }
      },
      "SegmentationFileType": {
        "title": "SegmentationFileType",
        "enum": ["tif2d", "tif3d", "tifseq", "pngseq"],
        "description": "An enumeration."
      },
      "SegmentationUpdate": {
        "title": "SegmentationUpdate",
        "type": "object",
        "properties": {
          "title": { "title": "Title", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "file_type": { "$ref": "#/components/schemas/SegmentationFileType" },
          "location": { "title": "Location", "type": "string" }
        }
      },
      "Shapes": {
        "title": "Shapes",
        "type": "object",
        "properties": {
          "shapes": {
            "title": "Shapes",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "type": "object" }
            }
          }
        }
      },
      "Task": {
        "title": "Task",
        "required": ["task_id"],
        "type": "object",
        "properties": { "task_id": { "title": "Task Id", "type": "string" } }
      },
      "TaskState": {
        "title": "TaskState",
        "required": ["state"],
        "type": "object",
        "properties": {
          "state": { "title": "State", "type": "string" },
          "current": { "title": "Current", "type": "integer" },
          "total": { "title": "Total", "type": "integer" }
        }
      },
      "Token": {
        "title": "Token",
        "required": ["access_token", "token_type"],
        "type": "object",
        "properties": {
          "access_token": { "title": "Access Token", "type": "string" },
          "token_type": { "title": "Token Type", "type": "string" }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "email": { "title": "Email", "type": "string", "format": "email" },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "full_name": { "title": "Full Name", "type": "string" },
          "id": { "title": "Id", "type": "integer" }
        }
      },
      "UserCreate": {
        "title": "UserCreate",
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": { "title": "Email", "type": "string", "format": "email" },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "full_name": { "title": "Full Name", "type": "string" },
          "password": { "title": "Password", "type": "string" }
        }
      },
      "UserUpdate": {
        "title": "UserUpdate",
        "type": "object",
        "properties": {
          "email": { "title": "Email", "type": "string", "format": "email" },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "full_name": { "title": "Full Name", "type": "string" },
          "password": { "title": "Password", "type": "string" }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": { "scopes": {}, "tokenUrl": "/api/v1/login/access-token" }
        }
      }
    }
  }
}
